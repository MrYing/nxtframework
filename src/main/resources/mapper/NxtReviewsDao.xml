<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newxton.nxtframework.dao.NxtReviewsDao">

    <resultMap type="com.newxton.nxtframework.entity.NxtReviews" id="NxtReviewsMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="originType" column="origin_type" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="productId" column="product_id" jdbcType="INTEGER"/>
        <result property="orderFormId" column="order_form_id" jdbcType="INTEGER"/>
        <result property="orderFormProductId" column="order_form_product_id" jdbcType="INTEGER"/>
        <result property="dateline" column="dateline" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="NxtReviewsMap">
        select
          id, origin_type, user_id, product_id, order_form_id, order_form_product_id, dateline, content
        from nxt_reviews
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="NxtReviewsMap">
        select
          id, origin_type, user_id, product_id, order_form_id, order_form_product_id, dateline, content
        from nxt_reviews
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="NxtReviewsMap">
        select
        id, origin_type, user_id, product_id, order_form_id, order_form_product_id, dateline, content
        from nxt_reviews
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="originType != null">
                and origin_type = #{originType}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="productId != null">
                and product_id = #{productId}
            </if>
            <if test="orderFormId != null">
                and order_form_id = #{orderFormId}
            </if>
            <if test="orderFormProductId != null">
                and order_form_product_id = #{orderFormProductId}
            </if>
            <if test="dateline != null">
                and dateline = #{dateline}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into nxt_reviews(origin_type, user_id, product_id, order_form_id, order_form_product_id, dateline, content)
        values (#{originType}, #{userId}, #{productId}, #{orderFormId}, #{orderFormProductId}, #{dateline}, #{content})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into nxt_reviews(origin_type, user_id, product_id, order_form_id, order_form_product_id,
        dateline, content)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.originType}, #{entity.userId}, #{entity.productId}, #{entity.orderFormId},
            #{entity.orderFormProductId}, #{entity.dateline}, #{entity.content})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into nxt_reviews(origin_type, user_id, product_id, order_form_id, order_form_product_id,
        dateline, content)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.originType}, #{entity.userId}, #{entity.productId}, #{entity.orderFormId},
            #{entity.orderFormProductId}, #{entity.dateline}, #{entity.content})
        </foreach>
        on duplicate key update
        origin_type = values(origin_type) , user_id = values(user_id) , product_id = values(product_id) , order_form_id
        = values(order_form_id) , order_form_product_id = values(order_form_product_id) , dateline = values(dateline) ,
        content = values(content)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update nxt_reviews
        <set>
            <if test="originType != null">
                origin_type = #{originType},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="productId != null">
                product_id = #{productId},
            </if>
            <if test="orderFormId != null">
                order_form_id = #{orderFormId},
            </if>
            <if test="orderFormProductId != null">
                order_form_product_id = #{orderFormProductId},
            </if>
            <if test="dateline != null">
                dateline = #{dateline},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from nxt_reviews where id = #{id}
    </delete>

</mapper>